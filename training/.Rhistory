data<-read.ta
data<-read.csv("Executor,run .csv",header=TRUE)
setwd("F:/Software Analytics/WDPB Loops Detector/training")
data<-read.csv("Executor,run .csv",header=TRUE)
data<-read.csv("Executor,run .csv",header=TRUE)
data$workload
data<-read.csv("Executor,run .csv",header=TRUE)
data<-read.csv("Executor,run .csv",header=TRUE)
llinearModel<-lm(Count~workload,data = data);
data<-read.csv("Executor,run .csv",header=TRUE)
linearModel<-lm(Count~workload,data = data);
linearModel
data<-read.csv("Executor,run .csv",header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
linearModel
data<-read.csv("Executor,run .csv",header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
linearModel
powerModel
data<-read.csv("Executor,run .csv",header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
linearModel
powerModel
summary(linearModel)
summary(powerModel)
data<-read.csv("Executor,run WDPBTest,handleAllSelect WDPBTest,changeStatus .csv",header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
summary(linearModel)
summary(powerModel)
data<-read.csv("Executor,run WDPBTest,handleAllSelect WDPBTest,changeStatus .csv",header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
summary(linearModel)
summary(powerModel)
linearModel
data<-read.csv("Executor,run WDPBTest,handleAllSelect WDPBTest,changeStatus .csv",header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
summary(linearModel)
summary(powerModel)
data<-read.csv("Executor,run WDPBTest,handleAllSelect WDPBTest,changeStatus .csv",header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
summary(linearModel)
summary(powerModel)
data<-read.csv("Executor,run WDPBTest,handleAllSelect WDPBTest,changeStatus .csv",header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
summary(linearModel)
summary(powerModel)
linearModel
powerModel
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
temp[1]
temp[1]$
summary(linearModel)$r.squared
summary(linearModel)
sumLin<-summary(linearModel)
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
selectedComplexity
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
print(selectedComplexity)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt")
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
print(dataToWrite)
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
print(selectedComplexity)
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
print(length(temp))
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
temp
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
print(selectedComplexity)
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
temp[2]
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
print(selectedComplexity)
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp[2]
temp[3]
temp[4]
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
data
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
print(selectedComplexity)
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
temp[i]
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
linearModel
powerModel
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
linearModel
powerModel
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
print(linearModel)
print(powerModel)
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count)~log10(workload),data = data);
print(linearModel)
print(powerModel)
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count+1)~log10(workload+1),data = data);
print(linearModel)
print(powerModel)
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count+1)~log10(workload+1),data = data);
print(linearModel)
print(powerModel)
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
write("","complexity.txt")
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count+1)~log10(workload+1),data = data);
print(linearModel)
print(powerModel)
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
write(dataToWrite,"complexity.txt",append = TRUE)
}
temp = list.files(pattern="*.csv")
trainingData<-""
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
write("","complexity.txt")
for (i in 1:length(temp)){
data<-read.csv(temp[i],header=TRUE)
linearModel<-lm(Count~workload,data = data);
powerModel<-lm(log10(Count+1)~log10(workload+1),data = data);
print(linearModel)
print(powerModel)
sumLin<-summary(linearModel)
sumPow<-summary(powerModel)
linearModelRSq<-sumLin$r.squared
powModelRSq<-sumPow$r.squared
selectedComplexity<-0
if(linearModelRSq>=powModelRSq){
selectedComplexity<-max(as.numeric(unlist(linearModel$coefficients)))
}
else{
selectedComplexity<-max(as.numeric(unlist(powerModel$coefficients)))
}
dataToWrite<-paste(temp[i], selectedComplexity, sep = ",")
trainingData<-paste(trainingData, dataToWrite,"\n", sep = "")
write(trainingData,"complexity.txt")
}
